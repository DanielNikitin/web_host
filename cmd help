https://my.aeza.net/

-----------------------

sudo apt-get update
sudo apt-get -y upgrade
python3 -V
sudo apt-get install -y python3-pip
pip3 install package_name
sudo apt-get install -y python3-venv

use the mkdir command to build a new directory
mkdir newdir_example

python3 -m venv venv
source venv/bin/activate

DONE
---------------------

clear

---------

start bot from venv, then ->

screen -S bot
ctrl + a, ctrl + d

if need move back to bot screen
screen -r name
screen -ls  -> list of all screens

--------------

ctrl + c  -> stop bot
deactivate  -> off venv

------------------

cd name  -> move to dir
rm -> delete
rm home/run.py -> example
rm -r recursive delete (full)
rm -rf recusive force delete (if worked but need delete)
rm -rf home/ -> example


nano scripts.sh  VIM redactor
right click mouse button  paste
ctrl + x  save 
sh script.sh  start

LAMP full web packet
installing same as Django (upper)


---------------------

systemctl status <name>
apache2 / nginx

---------------------

Установите screen, если он ещё не установлен. Вы можете сделать это с помощью менеджера пакетов APT в Ubuntu:
bash
Copy code
sudo apt-get install screen
Запустите новый сеанс screen, выполнив команду:
bash
Copy code
screen
Теперь вы находитесь в новом сеансе screen. Вы можете выполнять в нем команды и запускать процессы, как обычно.

Для того чтобы отсоединиться от сеанса screen, нажмите Ctrl + A, затем D (Ctrl+A, D). Это отсоединит текущий сеанс и вернет вас в обычный терминал.

Чтобы вернуться к сеансу screen, выполните команду:

bash
Copy code
screen -r
Если у вас есть несколько сеансов screen, у вас будет предложено выбрать, к какому сеансу вы хотите подключиться. Вы можете также указать идентификатор сеанса после -r, если он известен.

Чтобы завершить сеанс screen, вернитесь к нему с помощью screen -r, а затем выполните команду, которую вы хотите завершить. После завершения работы нажмите Ctrl + D, чтобы выйти из сеанса screen.
Таким образом, вы можете создавать и управлять различными сеансами screen, переключаясь между ними по необходимости. Это полезно, когда вам нужно выполнять длительные задачи в фоновом режиме или работать с несколькими процессами одновременно.
